/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/products/route";
exports.ids = ["app/api/products/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_olivi_Domaine_Vallot_src_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/products/route.ts */ \"(rsc)/./src/app/api/products/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/products/route\",\n        pathname: \"/api/products\",\n        filename: \"route\",\n        bundlePath: \"app/api/products/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\olivi\\\\Domaine Vallot\\\\src\\\\app\\\\api\\\\products\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_olivi_Domaine_Vallot_src_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/products/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/products/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/products/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase/server */ \"(rsc)/./src/lib/supabase/server.ts\");\n/* harmony import */ var _lib_validators_schemas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/validators/schemas */ \"(rsc)/./src/lib/validators/schemas.ts\");\n\n\n\n// Helper function to fix Supabase image URLs\nfunction fixSupabaseImageUrl(url) {\n    if (url.includes('supabase.co/storage/v1/object/public/wines/')) {\n        // Fix missing /Public/ in the URL path\n        return url.replace('/object/public/wines/', '/object/public/Public/wines/');\n    }\n    return url;\n}\n// Helper function to generate slug from product name\nfunction generateSlug(name) {\n    return name.toLowerCase().replace(/[àáâãäå]/g, 'a').replace(/[èéêë]/g, 'e').replace(/[ìíîï]/g, 'i').replace(/[òóôõö]/g, 'o').replace(/[ùúûü]/g, 'u').replace(/[ÿý]/g, 'y').replace(/[ñ]/g, 'n').replace(/[ç]/g, 'c').replace(/[«»\"']/g, '') // Remove quotes and guillemets\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/[\\s_-]+/g, '-') // Replace spaces and underscores with hyphens\n    .replace(/^-+|-+$/g, '') // Remove leading/trailing hyphens\n    ;\n}\n// Helper function to determine category from varietal\nfunction getCategoryFromVarietal(varietal) {\n    if (!varietal) return 'red_wine';\n    const lowerVarietal = varietal.toLowerCase();\n    if (lowerVarietal.includes('blanc') || lowerVarietal.includes('viognier') || lowerVarietal.includes('clairette') || lowerVarietal.includes('bourboulenc')) {\n        return 'white_wine';\n    }\n    if (lowerVarietal.includes('rosé') || lowerVarietal.includes('rose') || lowerVarietal.includes('cinsault')) {\n        return 'rose_wine';\n    }\n    return 'red_wine';\n}\n// Helper function to get wine-specific fallback images\nfunction getWineFallbackImage(wineName) {\n    const name = wineName.toLowerCase();\n    if (name.includes('magnaneraie')) {\n        return '/images/wine-magnaneraie.svg';\n    } else if (name.includes('rosé') || name.includes('rose')) {\n        return '/images/wine-bottle-rose.svg';\n    } else if (name.includes('blanc') || name.includes('white')) {\n        return '/images/wine-bottle-white.svg';\n    } else if (name.includes('rouge') || name.includes('red')) {\n        return '/images/wine-bottle-red.svg';\n    } else {\n        return '/images/default-wine.svg';\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        // Parse and validate search parameters\n        const searchData = {\n            query: searchParams.get('query') || undefined,\n            category: searchParams.get('category') || undefined,\n            minPrice: searchParams.get('minPrice') ? Number(searchParams.get('minPrice')) : undefined,\n            maxPrice: searchParams.get('maxPrice') ? Number(searchParams.get('maxPrice')) : undefined,\n            vintage: searchParams.get('vintage') ? Number(searchParams.get('vintage')) : undefined,\n            region: searchParams.get('region') || undefined,\n            inStock: searchParams.get('inStock') === 'true',\n            isOrganic: searchParams.get('isOrganic') === 'true',\n            sortBy: searchParams.get('sortBy') || 'created_at',\n            sortOrder: searchParams.get('sortOrder') || 'desc',\n            limit: searchParams.get('limit') ? Number(searchParams.get('limit')) : 20,\n            offset: searchParams.get('offset') ? Number(searchParams.get('offset')) : 0\n        };\n        // Validate search parameters\n        const validation = (0,_lib_validators_schemas__WEBPACK_IMPORTED_MODULE_2__.validateSchema)(_lib_validators_schemas__WEBPACK_IMPORTED_MODULE_2__.productSearchSchema, searchData);\n        if (!validation.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid search parameters',\n                details: validation.errors\n            }, {\n                status: 400\n            });\n        }\n        // Get products with filters\n        const options = {\n            limit: validation.data.limit,\n            offset: validation.data.offset,\n            category: validation.data.category,\n            inStock: validation.data.inStock\n        };\n        let products;\n        try {\n            products = await (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__.getProducts)(options);\n        } catch (error) {\n            console.log('Supabase connection failed, using mock data for development');\n            // Fallback mock data for development\n            products = [\n                {\n                    id: '1',\n                    name: 'Vallot Rouge 2020',\n                    slug: 'vallot-rouge-2020',\n                    description: 'A premium red wine with notes of dark fruit and oak.',\n                    price: 2500,\n                    vintage: 2020,\n                    category: 'red_wine',\n                    grape_variety: 'Cabernet Sauvignon',\n                    producer: 'Domaine Vallot',\n                    region: 'Bordeaux',\n                    stock_quantity: 50,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-red.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '2',\n                    name: 'Vallot Blanc 2021',\n                    slug: 'vallot-blanc-2021',\n                    description: 'A crisp white wine with citrus and mineral notes.',\n                    price: 2200,\n                    vintage: 2021,\n                    category: 'white_wine',\n                    grape_variety: 'Sauvignon Blanc',\n                    producer: 'Domaine Vallot',\n                    region: 'Loire Valley',\n                    stock_quantity: 30,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-white.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '3',\n                    name: 'Vallot Rosé 2022',\n                    slug: 'vallot-rose-2022',\n                    description: 'A delicate rosé with strawberry and floral aromas.',\n                    price: 1800,\n                    vintage: 2022,\n                    category: 'rose_wine',\n                    grape_variety: 'Grenache',\n                    producer: 'Domaine Vallot',\n                    region: 'Provence',\n                    stock_quantity: 25,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-rose.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '4',\n                    name: 'La Magnaneraje',\n                    slug: 'la-magnaneraje-2023',\n                    description: 'Côtes du Rhône - A classic red wine with earthy undertones.',\n                    price: 0,\n                    vintage: 2023,\n                    category: 'red_wine',\n                    grape_variety: 'Syrah',\n                    producer: 'Domaine Vallot',\n                    region: 'Côtes du Rhône',\n                    stock_quantity: 15,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-red.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '5',\n                    name: 'Le Coriançon rosé',\n                    slug: 'le-coriancon-rose-2024',\n                    description: 'Côtes du Rhône - Fresh rosé with vibrant fruit flavors.',\n                    price: 0,\n                    vintage: 2024,\n                    category: 'rose_wine',\n                    grape_variety: 'Grenache',\n                    producer: 'Domaine Vallot',\n                    region: 'Côtes du Rhône',\n                    stock_quantity: 20,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-rose.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '6',\n                    name: 'Le Coriançon rouge',\n                    slug: 'le-coriancon-rouge-2023',\n                    description: 'Côtes du Rhône - Bold red wine with complex tannins.',\n                    price: 0,\n                    vintage: 2023,\n                    category: 'red_wine',\n                    grape_variety: 'Mourvèdre',\n                    producer: 'Domaine Vallot',\n                    region: 'Côtes du Rhône',\n                    stock_quantity: 12,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-red.svg',\n                    created_at: new Date().toISOString()\n                },\n                {\n                    id: '7',\n                    name: 'Le Haut des Côtes blanc',\n                    slug: 'le-haut-des-cotes-blanc',\n                    description: 'Premium white wine with mineral complexity.',\n                    price: 0,\n                    vintage: 2023,\n                    category: 'white_wine',\n                    grape_variety: 'Viognier',\n                    producer: 'Domaine Vallot',\n                    region: 'Côtes du Rhône',\n                    stock_quantity: 8,\n                    is_organic: true,\n                    status: 'active',\n                    image_url: '/images/wine-bottle-white.svg',\n                    created_at: new Date().toISOString()\n                }\n            ];\n        }\n        // Apply additional filters that aren't handled in the database query\n        let filteredProducts = products;\n        if (validation.data.query) {\n            const query = validation.data.query.toLowerCase();\n            filteredProducts = filteredProducts.filter((product)=>product.name.toLowerCase().includes(query) || product.description.toLowerCase().includes(query) || product.producer?.toLowerCase().includes(query) || product.region?.toLowerCase().includes(query) || product.grape_variety?.toLowerCase().includes(query));\n        }\n        if (validation.data.minPrice !== undefined) {\n            filteredProducts = filteredProducts.filter((product)=>(product.price_eur || 0) >= validation.data.minPrice);\n        }\n        if (validation.data.maxPrice !== undefined) {\n            filteredProducts = filteredProducts.filter((product)=>(product.price_eur || 0) <= validation.data.maxPrice);\n        }\n        if (validation.data.vintage !== undefined) {\n            filteredProducts = filteredProducts.filter((product)=>product.vintage === validation.data.vintage);\n        }\n        if (validation.data.region) {\n            filteredProducts = filteredProducts.filter((product)=>product.region?.toLowerCase().includes(validation.data.region.toLowerCase()));\n        }\n        if (validation.data.isOrganic) {\n            filteredProducts = filteredProducts.filter((product)=>product.is_organic === true);\n        }\n        // Apply sorting\n        const sortBy = validation.data.sortBy;\n        const sortOrder = validation.data.sortOrder;\n        filteredProducts.sort((a, b)=>{\n            let aValue;\n            let bValue;\n            switch(sortBy){\n                case 'name':\n                    aValue = a.name.toLowerCase();\n                    bValue = b.name.toLowerCase();\n                    break;\n                case 'price':\n                    aValue = a.price_eur || 0;\n                    bValue = b.price_eur || 0;\n                    break;\n                case 'vintage':\n                    aValue = a.vintage || 0;\n                    bValue = b.vintage || 0;\n                    break;\n                case 'created_at':\n                    aValue = new Date(a.created_at).getTime();\n                    bValue = new Date(b.created_at).getTime();\n                    break;\n                case 'popularity':\n                    // For now, use stock quantity as a proxy for popularity\n                    aValue = a.stock_quantity;\n                    bValue = b.stock_quantity;\n                    break;\n                default:\n                    aValue = a.created_at;\n                    bValue = b.created_at;\n            }\n            if (sortOrder === 'asc') {\n                return aValue > bValue ? 1 : -1;\n            } else {\n                return aValue < bValue ? 1 : -1;\n            }\n        });\n        // Convert and map real Supabase data to component-expected format\n        const productsWithFormattedPrice = filteredProducts.map((product)=>({\n                ...product,\n                // Map key fields to expected names\n                description: product.description_en || product.description_fr || product.description || 'Fine wine from Domaine Vallot',\n                grape_variety: product.varietal || product.grape_variety,\n                producer: 'Domaine Vallot',\n                category: getCategoryFromVarietal(product.varietal),\n                alcohol_content: product.alcohol_content || 13.5,\n                // Price handling\n                price_display: product.price_eur ? product.price_eur.toFixed(2) : '0.00',\n                price: product.price_eur ? Math.round(product.price_eur * 100) : 0,\n                // Stock status\n                in_stock: product.stock_quantity > 0,\n                // Image handling with proper fallback\n                image_url: product.product_images?.[0]?.url ? fixSupabaseImageUrl(product.product_images[0].url) : getWineFallbackImage(product.name),\n                // Ensure proper slug generation\n                slug: product.slug_en || product.slug || generateSlug(`${product.name}-${product.vintage}`),\n                // Additional fields for UI\n                is_organic: product.organic_certified || false,\n                is_biodynamic: product.biodynamic_certified || false,\n                is_featured: product.featured || false\n            }));\n        // Prepare response with pagination info\n        const total = productsWithFormattedPrice.length;\n        const paginatedProducts = productsWithFormattedPrice.slice(validation.data.offset, validation.data.offset + validation.data.limit);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            data: paginatedProducts,\n            pagination: {\n                total,\n                limit: validation.data.limit,\n                offset: validation.data.offset,\n                hasMore: validation.data.offset + validation.data.limit < total\n            },\n            filters: {\n                categories: [\n                    'red_wine',\n                    'white_wine',\n                    'rose_wine',\n                    'sparkling_wine',\n                    'dessert_wine',\n                    'fortified_wine'\n                ],\n                priceRange: {\n                    min: Math.min(...products.map((p)=>p.price_eur || 0).filter((p)=>p > 0)),\n                    max: Math.max(...products.map((p)=>p.price_eur || 0))\n                },\n                vintages: [\n                    ...new Set(products.map((p)=>p.vintage).filter(Boolean))\n                ].sort((a, b)=>b - a),\n                regions: [\n                    ...new Set(products.map((p)=>p.region).filter(Boolean))\n                ].sort()\n            }\n        });\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to fetch products'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/products/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase/server.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/server.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCart: () => (/* binding */ addToCart),\n/* harmony export */   createOrUpdateCustomer: () => (/* binding */ createOrUpdateCustomer),\n/* harmony export */   createOrder: () => (/* binding */ createOrder),\n/* harmony export */   createRouteHandlerSupabaseClient: () => (/* binding */ createRouteHandlerSupabaseClient),\n/* harmony export */   createServerSupabaseClient: () => (/* binding */ createServerSupabaseClient),\n/* harmony export */   getCartItems: () => (/* binding */ getCartItems),\n/* harmony export */   getOrderById: () => (/* binding */ getOrderById),\n/* harmony export */   getProductById: () => (/* binding */ getProductById),\n/* harmony export */   getProductBySlug: () => (/* binding */ getProductBySlug),\n/* harmony export */   getProducts: () => (/* binding */ getProducts),\n/* harmony export */   getServerAdminUser: () => (/* binding */ getServerAdminUser),\n/* harmony export */   getServerSession: () => (/* binding */ getServerSession),\n/* harmony export */   getServerUser: () => (/* binding */ getServerUser),\n/* harmony export */   getVatRateByCountry: () => (/* binding */ getVatRateByCountry),\n/* harmony export */   removeFromCart: () => (/* binding */ removeFromCart),\n/* harmony export */   safeQuery: () => (/* binding */ safeQuery),\n/* harmony export */   updateCartItem: () => (/* binding */ updateCartItem)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\n// Create server client for Server Components\nconst createServerSupabaseClient = async ()=>{\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://vmtudbupajnjyauvqnej.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZtdHVkYnVwYWpuanlhdXZxbmVqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5MzkwNTcsImV4cCI6MjA3MzUxNTA1N30.7SZ6RUgXQdI-nf1Dun7XnQ2sRIL-R_KcV2EoECuXsGs\", {\n        cookies: {\n            get (name) {\n                return cookieStore.get(name)?.value;\n            },\n            set (name, value, options) {\n                cookieStore.set(name, value, options);\n            },\n            remove (name, options) {\n                cookieStore.delete(name);\n            }\n        }\n    });\n};\n// Create client for API Route Handlers\nconst createRouteHandlerSupabaseClient = (request)=>{\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://vmtudbupajnjyauvqnej.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZtdHVkYnVwYWpuanlhdXZxbmVqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5MzkwNTcsImV4cCI6MjA3MzUxNTA1N30.7SZ6RUgXQdI-nf1Dun7XnQ2sRIL-R_KcV2EoECuXsGs\", {\n        cookies: {\n            get (name) {\n                return request?.cookies.get(name)?.value;\n            },\n            set (name, value, options) {\n            // For route handlers, we need to set cookies differently\n            // This will be handled by the response\n            },\n            remove (name, options) {\n            // For route handlers, we need to remove cookies differently\n            // This will be handled by the response\n            }\n        }\n    });\n};\n// Authentication helpers for server-side\nconst getServerUser = async ()=>{\n    const supabase = await createServerSupabaseClient();\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n        console.error('Error getting server user:', error);\n        return null;\n    }\n    return user;\n};\nconst getServerSession = async ()=>{\n    const supabase = await createServerSupabaseClient();\n    const { data: { session }, error } = await supabase.auth.getSession();\n    if (error) {\n        console.error('Error getting server session:', error);\n        return null;\n    }\n    return session;\n};\n// Admin authentication helper\nconst getServerAdminUser = async ()=>{\n    const user = await getServerUser();\n    if (!user) {\n        throw new Error('Not authenticated');\n    }\n    // Check if user has admin role in user metadata or in a separate admin table\n    const supabase = await createServerSupabaseClient();\n    // Option 1: Check user metadata\n    if (user.user_metadata?.role === 'admin') {\n        return user;\n    }\n    // Option 2: Check admin table (if exists)\n    const { data: adminRecord } = await supabase.from('admin_users').select('*').eq('user_id', user.id).single();\n    if (!adminRecord) {\n        throw new Error('Admin access required');\n    }\n    return user;\n};\n// Database query helpers with error handling\nconst safeQuery = async (queryFn)=>{\n    const supabase = await createServerSupabaseClient();\n    const { data, error } = await queryFn(supabase);\n    if (error) {\n        console.error('Database query error:', error);\n        if (error.code === 'PGRST116') {\n            throw new Error('Resource not found');\n        }\n        if (error.code === '42501') {\n            throw new Error('Access denied');\n        }\n        throw new Error(error.message || 'Database query failed');\n    }\n    return data;\n};\n// Product queries\nconst getProducts = async (options)=>{\n    return safeQuery(async (supabase)=>{\n        let query = supabase.from('wine_products').select(`\n        *,\n        product_images!inner(\n          url,\n          alt_text_en,\n          alt_text_fr,\n          is_primary\n        )\n      `).eq('is_active', true).eq('product_images.is_primary', true);\n        if (options?.category) {\n            query = query.eq('category', options.category);\n        }\n        if (options?.inStock) {\n            query = query.gt('stock_quantity', 0);\n        }\n        if (options?.limit) {\n            query = query.limit(options.limit);\n        }\n        if (options?.offset) {\n            query = query.range(options.offset, options.offset + (options.limit || 10) - 1);\n        }\n        return query.order('created_at', {\n            ascending: false\n        });\n    });\n};\nconst getProductById = async (id)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('wine_products').select('*').eq('id', id).eq('is_active', true).single();\n    });\n};\nconst getProductBySlug = async (slug)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('wine_products').select('*').eq('slug', slug).eq('is_active', true).single();\n    });\n};\n// Cart queries\nconst getCartItems = async (userId)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('cart_items').select(`\n        *,\n        wine_products (*)\n      `).eq('user_id', userId);\n    });\n};\nconst addToCart = async (userId, productId, quantity)=>{\n    return safeQuery(async (supabase)=>{\n        // Check if item already exists in cart\n        const { data: existingItem } = await supabase.from('cart_items').select('*').eq('user_id', userId).eq('product_id', productId).single();\n        if (existingItem) {\n            // Update quantity\n            return supabase.from('cart_items').update({\n                quantity: existingItem.quantity + quantity\n            }).eq('id', existingItem.id).select().single();\n        } else {\n            // Insert new item\n            return supabase.from('cart_items').insert({\n                user_id: userId,\n                product_id: productId,\n                quantity\n            }).select().single();\n        }\n    });\n};\nconst updateCartItem = async (userId, itemId, quantity)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('cart_items').update({\n            quantity\n        }).eq('id', itemId).eq('user_id', userId).select().single();\n    });\n};\nconst removeFromCart = async (userId, itemId)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('cart_items').delete().eq('id', itemId).eq('user_id', userId);\n    });\n};\n// Order queries\nconst createOrder = async (orderData)=>{\n    return safeQuery(async (supabase)=>{\n        // Start transaction by creating order first\n        const { data: order, error: orderError } = await supabase.from('orders').insert({\n            user_id: orderData.user_id,\n            customer_email: orderData.customer_email,\n            customer_first_name: orderData.customer_first_name,\n            customer_last_name: orderData.customer_last_name,\n            shipping_address: orderData.shipping_address,\n            billing_address: orderData.billing_address || orderData.shipping_address,\n            subtotal: orderData.subtotal,\n            vat_amount: orderData.vat_amount,\n            shipping_cost: orderData.shipping_cost,\n            total_amount: orderData.total_amount,\n            payment_method: orderData.payment_method || 'mollie',\n            status: orderData.status || 'pending'\n        }).select().single();\n        if (orderError) throw orderError;\n        // Insert order items\n        const orderItems = orderData.items.map((item)=>({\n                order_id: order.id,\n                product_id: item.product_id,\n                quantity: item.quantity,\n                unit_price: item.unit_price,\n                total_price: item.quantity * item.unit_price\n            }));\n        const { error: itemsError } = await supabase.from('order_items').insert(orderItems);\n        if (itemsError) throw itemsError;\n        return {\n            data: order,\n            error: null\n        };\n    });\n};\nconst getOrderById = async (orderId, userId)=>{\n    return safeQuery(async (supabase)=>{\n        let query = supabase.from('orders').select(`\n        *,\n        order_items (\n          *,\n          wine_products (*)\n        )\n      `).eq('id', orderId);\n        if (userId) {\n            query = query.eq('user_id', userId);\n        }\n        return query.single();\n    });\n};\n// Customer queries\nconst createOrUpdateCustomer = async (userData)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('customers').upsert(userData, {\n            onConflict: 'user_id'\n        }).select().single();\n    });\n};\n// VAT rate queries\nconst getVatRateByCountry = async (countryCode)=>{\n    return safeQuery(async (supabase)=>{\n        return supabase.from('vat_rates').select('*').eq('country_code', countryCode.toUpperCase()).eq('is_active', true).single();\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase/server.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/validators/schemas.ts":
/*!***************************************!*\
  !*** ./src/lib/validators/schemas.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCartSchema: () => (/* binding */ addToCartSchema),\n/* harmony export */   addressSchema: () => (/* binding */ addressSchema),\n/* harmony export */   adminLoginSchema: () => (/* binding */ adminLoginSchema),\n/* harmony export */   adminUserSchema: () => (/* binding */ adminUserSchema),\n/* harmony export */   ageVerificationSchema: () => (/* binding */ ageVerificationSchema),\n/* harmony export */   changePasswordSchema: () => (/* binding */ changePasswordSchema),\n/* harmony export */   checkoutBillingSchema: () => (/* binding */ checkoutBillingSchema),\n/* harmony export */   checkoutCustomerSchema: () => (/* binding */ checkoutCustomerSchema),\n/* harmony export */   checkoutPaymentSchema: () => (/* binding */ checkoutPaymentSchema),\n/* harmony export */   checkoutShippingSchema: () => (/* binding */ checkoutShippingSchema),\n/* harmony export */   completeCheckoutSchema: () => (/* binding */ completeCheckoutSchema),\n/* harmony export */   contactFormSchema: () => (/* binding */ contactFormSchema),\n/* harmony export */   customerLoginSchema: () => (/* binding */ customerLoginSchema),\n/* harmony export */   customerRegistrationSchema: () => (/* binding */ customerRegistrationSchema),\n/* harmony export */   forgotPasswordSchema: () => (/* binding */ forgotPasswordSchema),\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   hasErrors: () => (/* binding */ hasErrors),\n/* harmony export */   imageUploadSchema: () => (/* binding */ imageUploadSchema),\n/* harmony export */   inventoryAdjustmentSchema: () => (/* binding */ inventoryAdjustmentSchema),\n/* harmony export */   loginSchema: () => (/* binding */ loginSchema),\n/* harmony export */   newsletterSchema: () => (/* binding */ newsletterSchema),\n/* harmony export */   orderSchema: () => (/* binding */ orderSchema),\n/* harmony export */   productSchema: () => (/* binding */ productSchema),\n/* harmony export */   productSearchSchema: () => (/* binding */ productSearchSchema),\n/* harmony export */   registerSchema: () => (/* binding */ registerSchema),\n/* harmony export */   resetPasswordSchema: () => (/* binding */ resetPasswordSchema),\n/* harmony export */   shippingRateSchema: () => (/* binding */ shippingRateSchema),\n/* harmony export */   updateCartItemSchema: () => (/* binding */ updateCartItemSchema),\n/* harmony export */   validateSchema: () => (/* binding */ validateSchema),\n/* harmony export */   vatCalculationSchema: () => (/* binding */ vatCalculationSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/ZodError.js\");\n\n// Common validation patterns\nconst emailSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().email('Please enter a valid email address');\nconst phoneSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^(\\+\\d{1,3}[- ]?)?\\d{8,15}$/, 'Please enter a valid phone number').optional();\nconst postalCodeSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, 'Postal code must be at least 3 characters').max(10, 'Postal code cannot exceed 10 characters');\nconst passwordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().min(8, 'Password must be at least 8 characters').regex(/[A-Z]/, 'Password must contain at least one uppercase letter').regex(/[a-z]/, 'Password must contain at least one lowercase letter').regex(/\\d/, 'Password must contain at least one number').regex(/[!@#$%^&*]/, 'Password must contain at least one special character');\n// Age verification schemas\nconst ageVerificationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    birthDay: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Please select a valid day').max(31, 'Please select a valid day'),\n    birthMonth: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Please select a valid month').max(12, 'Please select a valid month'),\n    birthYear: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1900, 'Please enter a realistic birth year').max(new Date().getFullYear(), 'Birth year cannot be in the future'),\n    documentType: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'id_card',\n        'passport',\n        'drivers_license'\n    ]).optional(),\n    documentNumber: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    country: zod__WEBPACK_IMPORTED_MODULE_0__.string().length(2, 'Country must be a 2-letter code').optional()\n}).refine((data)=>{\n    // Validate birth date\n    const birthDate = new Date(data.birthYear, data.birthMonth - 1, data.birthDay);\n    return !isNaN(birthDate.getTime()) && birthDate <= new Date();\n}, {\n    message: 'Please enter a valid birth date',\n    path: [\n        'birthDay'\n    ]\n});\n// Customer registration schemas\nconst customerRegistrationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    password: passwordSchema,\n    confirmPassword: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name must be at least 2 characters').max(50, 'First name cannot exceed 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'First name contains invalid characters'),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name must be at least 2 characters').max(50, 'Last name cannot exceed 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'Last name contains invalid characters'),\n    phone: phoneSchema,\n    birthDate: zod__WEBPACK_IMPORTED_MODULE_0__.string().refine((date)=>{\n        const birthDate = new Date(date);\n        const age = new Date().getFullYear() - birthDate.getFullYear();\n        return !isNaN(birthDate.getTime()) && age >= 16 && age <= 120;\n    }, 'You must be at least 16 years old to register'),\n    acceptTerms: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the terms and conditions'),\n    acceptPrivacy: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the privacy policy'),\n    acceptMarketing: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    country: zod__WEBPACK_IMPORTED_MODULE_0__.string().length(2, 'Please select a country')\n}).refine((data)=>data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: [\n        'confirmPassword'\n    ]\n});\n// Authentication schemas\nconst loginSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Password is required'),\n    rememberMe: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n});\nconst registerSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    password: passwordSchema,\n    confirmPassword: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name must be at least 2 characters').max(50, 'First name cannot exceed 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'First name contains invalid characters'),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name must be at least 2 characters').max(50, 'Last name cannot exceed 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'Last name contains invalid characters'),\n    phone: phoneSchema,\n    birthDate: zod__WEBPACK_IMPORTED_MODULE_0__.string().refine((date)=>{\n        const birthDate = new Date(date);\n        const age = new Date().getFullYear() - birthDate.getFullYear();\n        return !isNaN(birthDate.getTime()) && age >= 18 && age <= 120;\n    }, 'You must be at least 18 years old to register'),\n    preferredLanguage: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'en',\n        'fr'\n    ]),\n    marketingConsent: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    newsletterConsent: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    isBusiness: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    companyName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Company name is required').optional(),\n    vatNumber: zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^[A-Z]{2}[0-9A-Z]+$/, 'Invalid VAT number format').optional(),\n    termsAccepted: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the terms and conditions'),\n    privacyAccepted: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the privacy policy')\n}).refine((data)=>data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: [\n        'confirmPassword'\n    ]\n}).refine((data)=>{\n    if (data.isBusiness) {\n        return data.companyName && data.companyName.length >= 2;\n    }\n    return true;\n}, {\n    message: 'Company name is required for business accounts',\n    path: [\n        'companyName'\n    ]\n});\nconst forgotPasswordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema\n});\nconst resetPasswordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    token: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Reset token is required'),\n    password: passwordSchema,\n    confirmPassword: zod__WEBPACK_IMPORTED_MODULE_0__.string()\n}).refine((data)=>data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: [\n        'confirmPassword'\n    ]\n});\nconst changePasswordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    currentPassword: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Current password is required'),\n    newPassword: passwordSchema,\n    confirmPassword: zod__WEBPACK_IMPORTED_MODULE_0__.string()\n}).refine((data)=>data.newPassword === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: [\n        'confirmPassword'\n    ]\n});\n// Legacy alias for backward compatibility\nconst customerLoginSchema = loginSchema;\n// Address schemas\nconst addressSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name is required'),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name is required'),\n    company: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    address: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(5, 'Street address is required'),\n    address2: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    city: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'City is required'),\n    postalCode: postalCodeSchema,\n    country: zod__WEBPACK_IMPORTED_MODULE_0__.string().length(2, 'Please select a country'),\n    phone: phoneSchema\n});\n// Checkout schemas\nconst checkoutCustomerSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name is required'),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name is required'),\n    phone: phoneSchema,\n    createAccount: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n}).refine((data)=>{\n    if (data.createAccount) {\n        return data.password && data.password.length >= 8;\n    }\n    return true;\n}, {\n    message: 'Password is required when creating an account',\n    path: [\n        'password'\n    ]\n});\nconst checkoutShippingSchema = addressSchema;\nconst checkoutBillingSchema = addressSchema.extend({\n    sameAsShipping: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n});\nconst checkoutPaymentSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    paymentMethod: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'mollie',\n        'stripe',\n        'paypal'\n    ]),\n    savePaymentMethod: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    acceptTerms: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the terms and conditions')\n});\nconst completeCheckoutSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    customer: checkoutCustomerSchema,\n    shipping: checkoutShippingSchema,\n    billing: checkoutBillingSchema,\n    payment: checkoutPaymentSchema,\n    ageVerification: ageVerificationSchema,\n    vatNumber: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    specialInstructions: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(500, 'Special instructions cannot exceed 500 characters').optional()\n});\n// Cart schemas\nconst addToCartSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    productId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid product ID'),\n    quantity: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Quantity must be at least 1').max(24, 'Maximum 24 bottles per product').int('Quantity must be a whole number'),\n    variantId: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n});\nconst updateCartItemSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    itemId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid cart item ID'),\n    quantity: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Quantity must be 0 or more').max(24, 'Maximum 24 bottles per product').int('Quantity must be a whole number')\n});\n// Product schemas (for admin)\nconst productSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, 'Product name must be at least 3 characters').max(100, 'Product name cannot exceed 100 characters'),\n    sku: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, 'SKU must be at least 3 characters').max(50, 'SKU cannot exceed 50 characters').regex(/^[A-Z0-9-]+$/, 'SKU must contain only uppercase letters, numbers, and hyphens'),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(10, 'Description must be at least 10 characters').max(2000, 'Description cannot exceed 2000 characters'),\n    price: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Price must be at least €0.01').max(100000, 'Price cannot exceed €1,000.00'),\n    stockQuantity: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Stock quantity cannot be negative').max(10000, 'Stock quantity cannot exceed 10,000').int('Stock quantity must be a whole number'),\n    category: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'red_wine',\n        'white_wine',\n        'rose_wine',\n        'sparkling_wine',\n        'dessert_wine',\n        'fortified_wine'\n    ]),\n    vintage: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1800, 'Vintage must be realistic').max(new Date().getFullYear(), 'Vintage cannot be in the future').optional(),\n    alcoholContent: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0.5, 'Alcohol content must be at least 0.5%').max(20, 'Alcohol content cannot exceed 20%').optional(),\n    grapeVariety: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Grape variety name too long').optional(),\n    region: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Region name too long').optional(),\n    producer: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Producer name too long').optional(),\n    volume: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(187, 'Minimum volume is 187ml').max(3000, 'Maximum volume is 3000ml').optional(),\n    servingTemperature: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(50, 'Serving temperature description too long').optional(),\n    agingPotential: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Aging potential description too long').optional(),\n    pairingNotes: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(500, 'Pairing notes too long').optional(),\n    status: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'active',\n        'inactive',\n        'out_of_stock',\n        'discontinued'\n    ]),\n    isFeatured: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    isOrganic: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    isBiodynamic: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    imageUrl: zod__WEBPACK_IMPORTED_MODULE_0__.string().url('Please enter a valid image URL').optional(),\n    galleryImages: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string().url()).max(10, 'Maximum 10 gallery images').optional()\n});\n// Order schemas\nconst orderSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    customerId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid customer ID').optional(),\n    customerEmail: emailSchema,\n    customerFirstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name is required'),\n    customerLastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name is required'),\n    shippingAddress: addressSchema,\n    billingAddress: addressSchema,\n    items: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        productId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid product ID'),\n        quantity: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Quantity must be at least 1').int(),\n        unitPrice: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Unit price must be positive')\n    })).min(1, 'Order must contain at least one item'),\n    subtotal: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Subtotal cannot be negative'),\n    vatAmount: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'VAT amount cannot be negative'),\n    shippingCost: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Shipping cost cannot be negative'),\n    totalAmount: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Total amount must be positive'),\n    paymentMethod: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Payment method is required'),\n    specialInstructions: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(500, 'Special instructions too long').optional(),\n    giftMessage: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(200, 'Gift message too long').optional()\n});\n// Contact form schemas\nconst contactFormSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Name must be at least 2 characters').max(100, 'Name cannot exceed 100 characters'),\n    email: emailSchema,\n    subject: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(5, 'Subject must be at least 5 characters').max(100, 'Subject cannot exceed 100 characters'),\n    message: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(10, 'Message must be at least 10 characters').max(1000, 'Message cannot exceed 1000 characters'),\n    phone: phoneSchema,\n    category: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'general',\n        'orders',\n        'products',\n        'shipping',\n        'returns',\n        'technical'\n    ]).optional()\n});\n// Newsletter subscription schema\nconst newsletterSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name is required').optional(),\n    preferences: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        newProducts: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n        specialOffers: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n        wineEvents: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n        wineEducation: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n    }).optional(),\n    acceptTerms: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().refine((val)=>val === true, 'You must accept the terms and conditions')\n});\n// Admin schemas\nconst adminLoginSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Password is required'),\n    twoFactorCode: zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^\\d{6}$/, '2FA code must be 6 digits').optional()\n});\nconst adminUserSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: emailSchema,\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'First name is required'),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Last name is required'),\n    role: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'admin',\n        'manager',\n        'staff'\n    ]),\n    permissions: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).optional(),\n    isActive: zod__WEBPACK_IMPORTED_MODULE_0__.boolean(),\n    password: passwordSchema.optional()\n});\n// Inventory management schemas\nconst inventoryAdjustmentSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    productId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid product ID'),\n    adjustment: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(-1000, 'Adjustment too large').max(1000, 'Adjustment too large').int('Adjustment must be a whole number'),\n    reason: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'received',\n        'sold',\n        'damaged',\n        'expired',\n        'returned',\n        'correction',\n        'other'\n    ]),\n    notes: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(500, 'Notes cannot exceed 500 characters').optional(),\n    reference: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Reference cannot exceed 100 characters').optional()\n});\n// Shipping rate calculation schema\nconst shippingRateSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    destination: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        country: zod__WEBPACK_IMPORTED_MODULE_0__.string().length(2, 'Country must be a 2-letter code'),\n        postalCode: postalCodeSchema,\n        city: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'City is required')\n    }),\n    items: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        productId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid('Invalid product ID'),\n        quantity: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Quantity must be at least 1').int(),\n        weight: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Weight must be positive').optional()\n    })).min(1, 'At least one item is required'),\n    totalValue: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Total value must be positive')\n});\n// VAT calculation schema\nconst vatCalculationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    amount: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Amount must be positive'),\n    shippingAmount: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Shipping amount cannot be negative').optional(),\n    country: zod__WEBPACK_IMPORTED_MODULE_0__.string().length(2, 'Country must be a 2-letter code'),\n    customerType: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'consumer',\n        'business'\n    ]).optional(),\n    vatNumber: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n});\n// Search and filter schemas\nconst productSearchSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    query: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Search query too long').optional(),\n    category: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'red_wine',\n        'white_wine',\n        'rose_wine',\n        'sparkling_wine',\n        'dessert_wine',\n        'fortified_wine'\n    ]).optional(),\n    minPrice: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Minimum price cannot be negative').optional(),\n    maxPrice: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Maximum price cannot be negative').optional(),\n    vintage: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1800, 'Vintage too old').max(new Date().getFullYear(), 'Vintage cannot be in the future').optional(),\n    region: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, 'Region name too long').optional(),\n    inStock: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    isOrganic: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional(),\n    sortBy: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'name',\n        'price',\n        'vintage',\n        'created_at',\n        'popularity'\n    ]).optional(),\n    sortOrder: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'asc',\n        'desc'\n    ]).optional(),\n    limit: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(1, 'Limit must be at least 1').max(100, 'Limit cannot exceed 100').optional(),\n    offset: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0, 'Offset cannot be negative').optional()\n});\n// File upload schemas\nconst imageUploadSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    file: zod__WEBPACK_IMPORTED_MODULE_0__.any().refine((file)=>file instanceof File, 'Please select a valid file').refine((file)=>file.size <= 5 * 1024 * 1024, 'File size must be less than 5MB').refine((file)=>[\n            'image/jpeg',\n            'image/png',\n            'image/webp'\n        ].includes(file.type), 'File must be JPEG, PNG, or WebP format'),\n    alt: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(200, 'Alt text cannot exceed 200 characters').optional()\n});\n// Validation helper functions\nconst validateSchema = (schema, data)=>{\n    try {\n        const result = schema.parse(data);\n        return {\n            success: true,\n            data: result\n        };\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_1__.ZodError) {\n            const errors = {};\n            for (const issue of error.issues){\n                const path = issue.path.join('.');\n                if (!errors[path]) {\n                    errors[path] = [];\n                }\n                errors[path].push(issue.message);\n            }\n            return {\n                success: false,\n                errors\n            };\n        }\n        return {\n            success: false,\n            errors: {\n                general: [\n                    'Validation failed'\n                ]\n            }\n        };\n    }\n};\nconst getErrorMessage = (errors, field)=>{\n    return errors[field]?.[0] || '';\n};\nconst hasErrors = (errors)=>{\n    return Object.keys(errors).length > 0;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/validators/schemas.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod","vendor-chunks/@supabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Colivi%5CDomaine%20Vallot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();