{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "X-DNS-Prefetch-Control",
          "value": "on"
        },
        {
          "key": "Strict-Transport-Security",
          "value": "max-age=31536000; includeSubDomains"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=()"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/static/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/static(?:/(.*))(?:/)?$"
    },
    {
      "source": "/(.*).webp",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^(?:/(.*))\\.webp(?:/)?$"
    },
    {
      "source": "/(.*).avif",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^(?:/(.*))\\.avif(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [
      {
        "source": "/sitemap.xml",
        "destination": "/api/sitemap",
        "regex": "^/sitemap\\.xml(?:/)?$"
      },
      {
        "source": "/robots.txt",
        "destination": "/api/robots",
        "regex": "^/robots\\.txt(?:/)?$"
      }
    ],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/cart/[itemId]",
      "regex": "^/api/cart/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPitemId": "nxtPitemId"
      },
      "namedRegex": "^/api/cart/(?<nxtPitemId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/orders/[id]",
      "regex": "^/api/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/products/[slug]",
      "regex": "^/api/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/products/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/admin",
      "regex": "^/([^/]+?)/admin(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/admin(?:/)?$"
    },
    {
      "page": "/[locale]/admin/orders",
      "regex": "^/([^/]+?)/admin/orders(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/admin/orders(?:/)?$"
    },
    {
      "page": "/[locale]/admin/products",
      "regex": "^/([^/]+?)/admin/products(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/admin/products(?:/)?$"
    },
    {
      "page": "/[locale]/cart",
      "regex": "^/([^/]+?)/cart(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/cart(?:/)?$"
    },
    {
      "page": "/[locale]/checkout",
      "regex": "^/([^/]+?)/checkout(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/checkout(?:/)?$"
    },
    {
      "page": "/[locale]/forgot-password",
      "regex": "^/([^/]+?)/forgot\\-password(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/forgot\\-password(?:/)?$"
    },
    {
      "page": "/[locale]/login",
      "regex": "^/([^/]+?)/login(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/login(?:/)?$"
    },
    {
      "page": "/[locale]/orders/[id]",
      "regex": "^/([^/]+?)/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/products",
      "regex": "^/([^/]+?)/products(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/products(?:/)?$"
    },
    {
      "page": "/[locale]/products/[slug]",
      "regex": "^/([^/]+?)/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/products/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/register",
      "regex": "^/([^/]+?)/register(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/register(?:/)?$"
    },
    {
      "page": "/[locale]/reset-password",
      "regex": "^/([^/]+?)/reset\\-password(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/reset\\-password(?:/)?$"
    },
    {
      "page": "/[locale]/test-auth",
      "regex": "^/([^/]+?)/test\\-auth(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/test\\-auth(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}